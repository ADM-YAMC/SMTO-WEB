@page "/nuevo-usuario"
@using Newtonsoft.Json
@inject HttpClient Http
@inject IJSRuntime Js
<div class="container-xl mt-4">
    <RadzenCard class="mt-5 ml-1 col-lg-6 m-auto ">
        <div class="row">
            <div class="col">
                <h3>Nuevo usuario</h3>
            </div>
        </div>
        <EditForm Model="@usuario" OnValidSubmit="PostUser">
            <DataAnnotationsValidator />
            <div class="border-top mt-3">
                <div class="form-group">
                    <label class=" mb-1">Cedula</label>
                    <InputText @bind-Value="usuario.Cedula" class="form-control"></InputText>
                    <ValidationMessage For=@(() => usuario.Cedula) />
                </div>
            </div>
            <div class="form-group mt-2">
                <label class=" mb-1">Nombre y apellido</label>
                <InputText @bind-Value="usuario.NombreApellido" class="form-control"></InputText>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label class=" mb-1">Telefono</label>
                        <InputText @bind-Value="usuario.Telefono" class="form-control"></InputText>
                        <ValidationMessage For=@(() => usuario.Telefono) />
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label class=" mb-1">Rol</label>
                        <InputSelect @bind-Value="@usuario.Rol" class="form-control">
                            <option value="" selected disabled>Seleccione un rol</option>
                            <option value="Administrador">Administrador</option>
                            <option value="Usuario">Usuario</option>
                        </InputSelect>
                        <ValidationMessage For=@(() => usuario.Rol) />
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class=" mb-1">Correo</label>
                <InputText @bind-Value="usuario.NombreUsuario" class="form-control"></InputText>
                <ValidationMessage For=@(() => usuario.NombreUsuario) />
            </div>

            <div class="form-group">
                <label>Direccion</label>
                <InputTextArea @bind-Value="usuario.Direccion" class="form-control"></InputTextArea>
                <ValidationMessage For=@(() => usuario.Direccion) />
            </div>
            <button type="submit" class="btn btn-success float-right mt-2">Guardar</button>
        </EditForm>
    </RadzenCard>
</div>

@code {
    Usuario usuario = new Usuario();
    private Response respuesta;

    async Task PostUser()
    {
        DateTime fecha = new DateTime();
        usuario.FechaCreacion = fecha.ToString();
        usuario.Contraseña = "12345678";
        string json = JsonConvert.SerializeObject(usuario);
        StringContent httpContent = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
        var responses = await Http.PostAsync("https://localhost:44391/api/Usuarios", httpContent);
        respuesta = await responses.Content.ReadFromJsonAsync<Response>();
        if (respuesta.ok)
        {
            usuario = new Usuario();
            await Js.InvokeVoidAsync("success");
        }
        else
        {
            await Js.InvokeVoidAsync("error");
        }
    }

    public class Response
    {
        public bool ok { get; set; }
    }
}
