@page "/administrador"
@inject IJSRuntime Js

@inject HttpClient http
@inject ISessionStorageService sessionStorage;

<style>
    h1 {
        display: inline !important;
    }
</style>

<div class="container-xl">

    @if (vendidoEmpresas != null)
    {
    <div class="row mb-3 mt-4">
        <div class="col mb-3">
            <RadzenCard style="border-left: 3px solid #006797">
                <h1>@vendidoEmpresas.CantidadSucursales <span class="text-danger" style="font-size:20px;"><i class="fas fa-arrow-alt-circle-down"></i></span></h1>
                <label>Empresas actuales</label>
            </RadzenCard>
        </div>
        <div class="col mb-3">
            <RadzenCard style="border-left: 3px solid #006797">
                <h1 class="d-inline mr-2">@vendidoEmpresas.Viajes <span class="text-success" style="font-size:20px;"><i class="fas fa-arrow-alt-circle-up"></i></span></h1>
                <label>Boletos vendidos</label>
            </RadzenCard>
        </div>
        <div class="col mb-3">
            <RadzenCard style="border-left: 3px solid #006797">
                <h1 class="d-inline mr-2">RD$@(String.Format("{0:n0}", Convert.ToInt32(vendidoEmpresas.Balance))) <span class="text-success" style="font-size:20px;"><i class="fas fa-arrow-alt-circle-up"></i></span></h1>
                <label>Balace vendido</label>
            </RadzenCard>
        </div>
        <div class="col mb-3">
            <RadzenCard style="border-left: 3px solid #006797">
                <h1 class="d-inline mr-2">RD$@(String.Format("{0:n0}", Convert.ToInt32(vendidoEmpresas.Total))) <span class="text-success" style="font-size:20px;"><i class="fas fa-arrow-alt-circle-up"></i></span></h1>
                <label>Recaudado hoy</label>
            </RadzenCard>
        </div>
    </div>
    }


    <RadzenCard class="ml-0 mr-0 mt-3 mb-3">
        <SMTOWEB.Pages.AdminMTO.Empresas.EmpresasPage>
        </SMTOWEB.Pages.AdminMTO.Empresas.EmpresasPage>
    </RadzenCard>
    
</div>

@code {
    private UserTemp user;
    Empresa empresa;
    VendidoEmpresas vendidoEmpresas;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await sessionStorage.GetItemAsync<UserTemp>("usuario");
            if (user != null)
            {
                var fecha = DateTime.Now;
                vendidoEmpresas = await http.GetFromJsonAsync<VendidoEmpresas>
                    ($"https://localhost:44391/api/Empresas/TotalVendido/{fecha.Month}");
            }
        }
        catch (Exception)
        {

        }
    }

    public class VendidoEmpresas
    {
        public string Viajes { get; set; }
        public string Balance { get; set; }
        public string Total { get; set; }
        public int CantidadSucursales { get; set; }
    }
}
